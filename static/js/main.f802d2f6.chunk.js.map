{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","target","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","querySearch","setQuerySearch","setMovie","error","setError","isLoading","setLoading","handleClick","e","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","result","Title","Plot","Poster","imdbID","undefined","htmlFor","type","id","placeholder","value","onChange","disabled","onClick","App","addMovies","some","movieInList","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f802d2f6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\" target=\"blank\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [querySearch, setQuerySearch] = useState('');\n  const [movie, setMovie] = useState<Movie>();\n  const [error, setError] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const handleClick\n    = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      e.preventDefault();\n      setLoading(true);\n      const result = await getMovie(querySearch);\n\n      setLoading(false);\n\n      if ('Title' in result) {\n        const {\n          Title, Plot, Poster, imdbID,\n        } = result;\n\n        setMovie({\n          title: Title,\n          description: Plot,\n          imgUrl:\n            (Poster !== 'N/A'\n              ? Poster\n              : 'https://via.placeholder.com/360x270.png?text=no%20preview'),\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        });\n        setError(false);\n      } else {\n        setError(true);\n        setMovie(undefined);\n      }\n    };\n\n  const addToTheList = () => {\n    if (movie) {\n      addMovie(movie);\n      setQuerySearch('');\n      setMovie(undefined);\n    }\n  };\n\n  const handleInput = (value: string) => {\n    setQuerySearch(value);\n    setError(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={querySearch}\n              onChange={(e) => {\n                handleInput(e.target.value);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={`button is-light ${isLoading && 'is-loading'}`}\n              disabled={!querySearch}\n              onClick={(e) => {\n                handleClick(e);\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  addToTheList();\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=e4f6049b';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, addMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const duplicate = movies\n      .some(movieInList => movieInList.imdbId === movie.imdbId);\n\n    if (!duplicate) {\n      addMovies(state => (\n        [\n          ...state,\n          movie,\n        ]\n      ));\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}